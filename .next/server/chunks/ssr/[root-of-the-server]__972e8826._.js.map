{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/api.ts"],"sourcesContent":["import type { Project } from \"./types\";\n\nconst API_BASE_URL = \"/api/projects\";\n\nfunction handleDateConversion(projectData: any): Project {\n  const project = { ...projectData, dueDate: new Date(projectData.dueDate) };\n  if (projectData.createdAt) {\n    project.createdAt = new Date(projectData.createdAt);\n  }\n  if (projectData.updatedAt) {\n    project.updatedAt = new Date(projectData.updatedAt);\n  }\n  return project;\n}\n\nexport async function fetchProjects(): Promise<Project[]> {\n  const res = await fetch(API_BASE_URL);\n  if (!res.ok) throw new Error(\"Failed to fetch projects\");\n  const data = await res.json();\n  return data.map(handleDateConversion);\n}\n\nexport async function addProject(project: Omit<Project, 'id' | 'createdAt' | 'updatedAt'>): Promise<Project> {\n  const res = await fetch(API_BASE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(project),\n  });\n  if (!res.ok) {\n    const errorData = await res.json().catch(() => ({ error: \"Failed to add project\" }));\n    const message = errorData.error?.[0]?.message || \"Failed to add project\";\n    throw new Error(message);\n  }\n  const data = await res.json();\n  return handleDateConversion(data);\n}\n\nexport async function updateProject(project: Project): Promise<Project> {\n  if (!project.id) throw new Error(\"Project ID is required for update.\");\n  const res = await fetch(`${API_BASE_URL}/${project.id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(project),\n  });\n  if (!res.ok) {\n    const errorData = await res.json().catch(() => ({ error: \"Failed to update project\" }));\n    const message = errorData.error?.[0]?.message || \"Failed to update project\";\n    throw new Error(message);\n  }\n  const data = await res.json();\n  return handleDateConversion(data);\n}\n\nexport async function deleteProject(id: string): Promise<void> {\n  const res = await fetch(`${API_BASE_URL}/${id}`, { method: \"DELETE\" });\n  if (!res.ok) throw new Error(\"Failed to delete project\");\n}\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,eAAe;AAErB,SAAS,qBAAqB,WAAgB;IAC5C,MAAM,UAAU;QAAE,GAAG,WAAW;QAAE,SAAS,IAAI,KAAK,YAAY,OAAO;IAAE;IACzE,IAAI,YAAY,SAAS,EAAE;QACzB,QAAQ,SAAS,GAAG,IAAI,KAAK,YAAY,SAAS;IACpD;IACA,IAAI,YAAY,SAAS,EAAE;QACzB,QAAQ,SAAS,GAAG,IAAI,KAAK,YAAY,SAAS;IACpD;IACA,OAAO;AACT;AAEO,eAAe;IACpB,MAAM,MAAM,MAAM,MAAM;IACxB,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,OAAO,KAAK,GAAG,CAAC;AAClB;AAEO,eAAe,WAAW,OAAwD;IACvF,MAAM,MAAM,MAAM,MAAM,cAAc;QACpC,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,YAAY,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;gBAAE,OAAO;YAAwB,CAAC;QAClF,MAAM,UAAU,UAAU,KAAK,EAAE,CAAC,EAAE,EAAE,WAAW;QACjD,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,OAAO,qBAAqB;AAC9B;AAEO,eAAe,cAAc,OAAgB;IAClD,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,IAAI,MAAM;IACjC,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;QACvD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,YAAY,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;gBAAE,OAAO;YAA2B,CAAC;QACrF,MAAM,UAAU,UAAU,KAAK,EAAE,CAAC,EAAE,EAAE,WAAW;QACjD,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,OAAO,qBAAqB;AAC9B;AAEO,eAAe,cAAc,EAAU;IAC5C,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,CAAC,EAAE,IAAI,EAAE;QAAE,QAAQ;IAAS;IACpE,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;AAC/B","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/context/ProjectContext.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode, useCallback } from \"react\";\nimport type { Project } from \"@/lib/types\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { fetchProjects, addProject as addProjectApi, updateProject as updateProjectApi, deleteProject as deleteProjectApi } from \"@/lib/api\";\n\ninterface ProjectContextType {\n  projects: Project[];\n  isLoading: boolean;\n  addProject: (project: Omit<Project, 'id' | 'createdAt' | 'updatedAt'>) => Promise<void>;\n  updateProject: (project: Project) => Promise<void>;\n  deleteProject: (id: string) => Promise<void>;\n}\n\nconst ProjectContext = createContext<ProjectContextType | undefined>(undefined);\n\n// Helper to ensure all date fields are Date objects\nfunction coerceDates(projectData: any): Project {\n    const project = { ...projectData };\n    if (project.dueDate && typeof project.dueDate === 'string') {\n        project.dueDate = new Date(project.dueDate);\n    }\n    if (project.createdAt && typeof project.createdAt === 'string') {\n        project.createdAt = new Date(project.createdAt);\n    }\n    if (project.updatedAt && typeof project.updatedAt === 'string') {\n        project.updatedAt = new Date(project.updatedAt);\n    }\n    return project as Project;\n}\n\nexport function ProjectProvider({ children }: { children: ReactNode }) {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { toast } = useToast();\n\n  const loadProjects = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const fetchedProjects = await fetchProjects();\n      setProjects(fetchedProjects);\n    } catch (error) {\n      toast({ variant: \"destructive\", title: \"Error loading projects\", description: (error as Error).message });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    loadProjects();\n  }, [loadProjects]);\n\n  const addProject = async (project: Omit<Project, 'id' | 'createdAt' | 'updatedAt'>) => {\n    try {\n      const newProject = await addProjectApi(project);\n      setProjects(prev => [newProject, ...prev]);\n      toast({ title: \"Success\", description: \"Project added successfully.\" });\n    } catch (error) {\n      toast({ variant: \"destructive\", title: \"Error adding project\", description: (error as Error).message });\n      throw error;\n    }\n  };\n\n  const updateProject = async (project: Project) => {\n    try {\n      const updatedProject = await updateProjectApi(project);\n      setProjects(prev => prev.map(p => (p.id === updatedProject.id ? updatedProject : p)));\n      toast({ title: \"Success\", description: \"Project updated successfully.\" });\n    } catch (error) {\n      toast({ variant: \"destructive\", title: \"Error updating project\", description: (error as Error).message });\n      throw error;\n    }\n  };\n\n  const deleteProject = async (id: string) => {\n    try {\n      await deleteProjectApi(id);\n      setProjects(prev => prev.filter(p => p.id !== id));\n      toast({ title: \"Success\", description: \"Project deleted successfully.\" });\n    } catch (error) {\n      toast({ variant: \"destructive\", title: \"Error deleting project\", description: (error as Error).message });\n    }\n  };\n  \n  const handleFormSubmit = async (data: Omit<Project, 'id' | 'createdAt' | 'updatedAt'>, selectedProject: Project | null) => {\n    if (selectedProject?.id) {\n        // When updating, we need to preserve the original createdAt date\n        const projectToUpdate = { \n            ...data, \n            id: selectedProject.id, \n            createdAt: selectedProject.createdAt,\n            // The updatedAt will be set by the server, but we can update it on the client for immediate feedback\n            updatedAt: new Date()\n        };\n        await updateProject(coerceDates(projectToUpdate));\n    } else {\n        await addProject(data);\n    }\n  };\n\n  return (\n    <ProjectContext.Provider value={{ projects, isLoading, addProject, updateProject, deleteProject }}>\n      {children}\n    </ProjectContext.Provider>\n  );\n}\n\nexport function useProjects() {\n  const context = useContext(ProjectContext);\n  if (context === undefined) {\n    throw new Error(\"useProjects must be used within a ProjectProvider\");\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,iKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,iKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,8OAAC,iKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AACA,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,8OAAC,4LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,iKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,8OAAC,iIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,8OAAC,iIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,8OAAC;4BAAI,WAAU;;gCACZ,uBAAS,8OAAC,iIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,8OAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,8OAAC,iIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,8OAAC,iIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB","debugId":null}}]
}